@model QMaze.Models.GameModel

@{
    ViewBag.Title = ViewBag.Title = QMaze.Resources.HomeTexts.Play;
}

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="~/unityBuild/TemplateData/style.css" rel="stylesheet" />
<script src="~/unityBuild/TemplateData/UnityProgress.js"></script>

<div class="template">
    <p class="header"><span>Unity WebGL Player | </span>QMaze</p>
    <div class="template-wrap clear">
        <canvas class="emscripten" id="canvas" oncontextmenu="event.preventDefault()" height="600px" width="960px"></canvas>
        <br>
        <div class="logo"></div>
        <div class="fullscreen"><img src="../unityBuild/TemplateData/fullscreen.png" width="38" height="38" alt="Fullscreen" title="Fullscreen" onclick="SetFullscreen(1);" /></div>
        <div class="title">QMaze</div>
    </div>
    <p class="footer">&laquo; created with <a href="http://unity3d.com/" title="Go to unity3d.com">Unity</a> &raquo;</p>
    <script type='text/javascript'>
        var Module = {
            TOTAL_MEMORY: 268435456,
            errorhandler: null,			// arguments: err, url, line. This function must return 'true' if the error is handled, otherwise 'false'
            compatibilitycheck: null,
            dataUrl: "./../unityBuild/Release/build.data",
            codeUrl: "./../unityBuild/Release/build.js",
            memUrl: "./../unityBuild/Release/build.mem",

        };
    </script>
    <script src="~/unityBuild/Release/UnityLoader.js"></script>


    <script type="text/javascript">
        console.log("novo");
        // use this function to send thing to the unity game, i.e. the question list
        // might be better to try with WWWForm
        /*function SendToUnity(objName, methodName, args) {
            SendMessage(objName, methodName, args);
            // for example
            //SendMessage("Test", "setQuestions", "string with all the questions");
        }*/

        // this is called from Unity -- works :)
        // usage: in unity cs or js, use Application.ExternalCall("FunctionName", "args")
        // or Application.ExternalEval(funcName)
        function DisplayScore(arg) {
            alert("This is triggered from Unity!");

            // update the score in db etc
        }

        function testera(args) {
            console.log(args);
        }

        /*
        console.log("SAD CE ;)");
        $(document).ready(function () {
            console.log("USOOOO", "ima unity => " + detectUnityWebPlayer());
            if (!detectUnityWebPlayer()) {
                $("#errorMessageHolder").html("In order to play this game you need to download UnityWebPlayer.<br/>"
                    + "You can download it from <a href='https://unity3d.com/webplayer'>here</a>.");
            }
        });*/
    </script>
</div>




