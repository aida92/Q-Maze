@model QMaze.Models.GameStatisticsModel

@{
    ViewBag.Title = "Statistics";
}

<h2>Game statistics</h2>

<p>
    You have to be logged in to see individual statistics. Click @Html.ActionLink("here", "PlayerStatistics", new { Id = "" }, null).
</p>

<div>
    <div>
        @using (Ajax.BeginForm("RefreshList", "Statistics", new AjaxOptions()
        {
            UpdateTargetId = "PlayerList",
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "POST",
            LoadingElementId = "loading"

        }))
        {
            @Html.LabelFor(m => m.OrderBy)
            @Html.DropDownListFor(m => m.OrderBy, new SelectList(Model.OrderByList), "None")
        }
    </div>
</div>

<div id="PlayerList">
    @Html.Partial("_PlayerList", Model)
</div>

@section scripts {
    <script type="text/javascript">
    $("#OrderBy").change(function (event) {
        $(this).parents("form").submit();
    });
    $("#OrderBy").keyup(function (event)
    {
        // $(this).parents("form").submit();

        // Moze i ovako, efekat je isti, ali je fleksibilnije, jer direktno
        // koristimo JQuery.ajax() metodu.
        $.ajax($(this).parents("form").attr("action"), {
            // submit-uju se parametri koji se pokupe iz forme
            data: { OrderBy: $("#OrderBy").val() },
            method: "POST",
            beforeSend: function()
            {
                $("#loading").show();
            },
            complete: function()
            {
                $("#loading").hide();
            },
            // izvrsava se ako zahtev uspe
            success: function (data, status, xhr) {
                $("#PlayerList").html(data);
            },
            // izvrsava se ako se dogodi neka greska
            error: function (xhr, status, err)
            {
                $("#PlayerList").text(err);
            },
            dataType: "html"
        });
    });
    </script>
}